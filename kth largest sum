class Solution {
public:
    long long kthLargestLevelSum(TreeNode* root, int k) {
        vector<long long>res;//for storing level wise sum
        queue<TreeNode*>q;//for traversing level wise
        q.push(root);
        while(!q.empty()){
            long long size=q.size(),sum=0;
            for(int i=0;i<size;i++){
                TreeNode *temp=q.front();
                q.pop();
                if(temp->left)q.push(temp->left);
                if(temp->right)q.push(temp->right);
                sum += (long long)temp->val;//adding up all the values of same order together
            }
            res.push_back(sum);//pushin back tha value to res in order to store level wise sum
        }
        sort(res.begin(),res.end());//sorting the the res in order to easily find kth largest 
        int n=res.size();
        return (n >= k)?res[n-k] : -1;//returning the kth largest sum 
    }
};
